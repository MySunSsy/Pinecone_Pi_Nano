C51 COMPILER V9.01   MP3PLAYER                                                             05/20/2019 10:29:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MP3PLAYER
OBJECT MODULE PLACED IN .\Objects\mp3player.obj
COMPILER INVOKED BY: E:\KEIL14开发程序\C51\BIN\C51.EXE Library\device\MP3Player\mp3player.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(.\Library\device\digital tube;.\Library\device\HC_SR04;.\Library\device\MP3Player;.\Library\device\Servo;.\Lib
                    -rary\device\WS2812B;.\Library\system\ADC;.\Library\system\delay;.\Library\system\EEPROM;.\Library\system\EXTI;.\Library\
                    -system\GPIO;.\Library\system\IIC;.\Library\system\PCA;.\Library\system\PWM;.\Library\system\SYSTEM(Important documents）
                    -;.\Library\system\TIMER;.\Library\system\UART;.\Library\system\WatchDog) DEBUG OBJECTEXTEND PRINT(.\Listings\mp3player.l
                    -st) TABS(2) OBJECT(.\Objects\mp3player.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    mp3player.c
   4            * @author  PineconePi
   5            * @version V1.0.0
   6            * @date    20-December-2018
   7            * @brief  This article will be used for  driving  MP3 Player.
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            * include library/system/uart uart.c & uaet.h
  12            *
  13            *  
  14            * 
  15            * 
  16            * 
  17            * 
  18            *
  19            * 
  20            ******************************************************************************
  21            **/
  22          #include "mp3player.h"
  23          #define BRT             (65536 - MAIN_Fosc / 9600 / 4)
  24          static unsigned char Send_buf[10] = {0};
  25          bit busy;
  26          char wptr;
  27          char rptr;
  28          
  29          //========================================================================
  30          // 函数: void Mp3_Init()
  31          // 描述: 初始化MP3控制串口（串口2）.
  32          // 参数:  
  33          //       
  34          //       
  35          // 返回: 
  36          // 版本: VER1.0.0
  37          // 日期: 2018-12-20
  38          // 作者: PineconePi
  39          // 备注:
  40          //  
  41          //  
  42          //  
  43          //  
  44          //  
  45          //========================================================================
  46          void Mp3_Init() //初始化串口2
  47          {
  48   1          S2CON = 0x10;
  49   1          T2L = BRT;
  50   1          T2H = BRT >> 8;
C51 COMPILER V9.01   MP3PLAYER                                                             05/20/2019 10:29:15 PAGE 2   

  51   1          AUXR = 0x14;
  52   1          wptr = 0x00;
  53   1          rptr = 0x00;
  54   1          busy = 0;
  55   1      }
  56          
  57          //========================================================================
  58          // 函数: void DoSum( unsigned char *Str, unsigned char len)
  59          // 描述: 求和校验.
  60          // 参数:  
  61          //       
  62          //       
  63          // 返回: 
  64          // 版本: VER1.0.0
  65          // 日期: 2018-12-20
  66          // 作者: PineconePi
  67          // 备注:
  68          //     和校验的思路如下
  69          //            发送的指令，去掉起始和结束。将中间的6个字节进行累加，最后取反码
  70          //             接收端就将接收到的一帧数据，去掉起始和结束。将中间的数据累加，再加上接收到的校验
  71          //             字节。刚好为0.这样就代表接收到的数据完全正确。 
  72          //    
  73          //========================================================================
  74          void DoSum( unsigned char *Str, unsigned char len)
  75          {
  76   1          unsigned int xorsum = 0;
  77   1          unsigned char i;
  78   1      
  79   1          for(i=0; i<len; i++)
  80   1          {
  81   2              xorsum  = xorsum + Str[i];
  82   2          }
  83   1        xorsum     = 0 -xorsum;
  84   1        *(Str+i)   = (unsigned char)(xorsum >>8);
  85   1        *(Str+i+1) = (unsigned char)(xorsum & 0x00ff);
  86   1      }
  87          
  88          //========================================================================
  89          // 函数: void sendacmd(unsigned char len)
  90          // 描述: 串口发送一帧数据（串口2）.
  91          // 参数:  
  92          //       
  93          //       
  94          // 返回: 
  95          // 版本: VER1.0.0
  96          // 日期: 2018-12-20
  97          // 作者: PineconePi
  98          // 备注:
  99          //  
 100          //  
 101          //  
 102          //  
 103          //  
 104          //========================================================================
 105          void Uart2Send(char dat)
 106          {
 107   1          while (busy);
 108   1          busy = 1;
 109   1          S2BUF = dat;
 110   1          while((S2CON & S2TI)==0);
 111   1          S2CON &=~S2TI;
 112   1          busy = 0;
C51 COMPILER V9.01   MP3PLAYER                                                             05/20/2019 10:29:15 PAGE 3   

 113   1      }
 114          void sendacmd(unsigned char len)
 115          {
 116   1          unsigned char i = 0 ;
 117   1      
 118   1          Uart2Send(0x7E); //起始
 119   1          for(i=0; i<len; i++)//数据
 120   1          {
 121   2          Uart2Send(Send_buf[i]) ;
 122   2          }
 123   1          Uart2Send(0xEF) ;//结束
 124   1      }
 125          //========================================================================
 126          // 函数: void sendacmd(unsigned char len)
 127          // 描述: 串口向外发送命令（串口2）.
 128          // 参数:   CMD:表示控制指令，请查阅指令表，还包括查询的相关指令
 129          //         feedback:是否需要应答[DISABLE:不需要应答，ENABLE:需要应答]
 130          //         data:传送的参数
 131          // 返回: 
 132          // 版本: VER1.0.0
 133          // 日期: 2018-12-20
 134          // 作者: PineconePi
 135          // 备注:
 136          //  
 137          //  
 138          //  
 139          //  
 140          //  
 141          //========================================================================
 142          void SendCMD(unsigned char CMD ,unsigned char feedback , unsigned int dat)
 143          {
 144   1          Send_buf[0] = 0xff;    //保留字节 
 145   1          Send_buf[1] = 0x06;    //长度
 146   1          Send_buf[2] = CMD;     //控制指令
 147   1          Send_buf[3] = feedback;//是否需要反馈
 148   1          Send_buf[4] = (unsigned char)(dat >> 8);//datah
 149   1          Send_buf[5] = (unsigned char)(dat);     //datal
 150   1          DoSum(&Send_buf[0],6);        //校验
 151   1        sendacmd(8);       //发送此帧数据
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
