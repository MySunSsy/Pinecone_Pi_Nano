C51 COMPILER V9.01   ADC                                                                   05/20/2019 10:29:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: E:\KEIL14开发程序\C51\BIN\C51.EXE Library\system\ADC\ADC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\
                    -Library\device\digital tube;.\Library\device\HC_SR04;.\Library\device\MP3Player;.\Library\device\Servo;.\Library\device\
                    -WS2812B;.\Library\system\ADC;.\Library\system\delay;.\Library\system\EEPROM;.\Library\system\EXTI;.\Library\system\GPIO;
                    -.\Library\system\IIC;.\Library\system\PCA;.\Library\system\PWM;.\Library\system\SYSTEM(Important documents）;.\Library\s
                    -ystem\TIMER;.\Library\system\UART;.\Library\system\WatchDog) DEBUG OBJECTEXTEND PRINT(.\Listings\ADC.lst) TABS(2) OBJECT
                    -(.\Objects\ADC.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    adc.h
   4            * @author  PineconePi
   5            * @version V1.0.0
   6            * @date    20-December-2018
   7            * @brief  This file is used to configure ADC
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            *
  12            *
  13            *  
  14            * 
  15            * 
  16            * 
  17            * 
  18            *
  19            * 
  20            ******************************************************************************
  21            **/
  22            
  23          #include  "adc.h"
  24          #include "intrins.h"
  25          
  26          /********************* ADC中断函数************************/
  27          void ADC_int (void) interrupt 5
  28          {
  29   1        ADC_CONTR &= ~ADC_FLAG;
  30   1      }
  31          //========================================================================
  32          // 函数: void ADC_Inilize(ADC_InitTypeDef *ADCx)
  33          // 描述: ADC初始化程序.
  34          // 参数: 请参考adc.h里面的结构体定义
  35          //       
  36          //       
  37          // 返回: 
  38          // 版本: VER1.0.0
  39          // 日期: 2018-12-20
  40          // 作者: PineconePi
  41          // 备注:
  42          //  
  43          //  
  44          //  
  45          //  
  46          //  
  47          //========================================================================
  48          void  ADC_Inilize(ADC_InitTypeDef *ADCx)
  49          {
  50   1        P1M0 = 0x00;
C51 COMPILER V9.01   ADC                                                                   05/20/2019 10:29:16 PAGE 2   

  51   1        P1M1 |= ADCx->ADC_Px;
  52   1        ADC_CONTR = (ADC_CONTR & ~ADC_90T) | ADCx->ADC_Speed;
  53   1        if(ADCx->ADC_Power == ENABLE) ADC_CONTR |= 0x80;
  54   1        else              ADC_CONTR &= 0x7F;
  55   1        if(ADCx->ADC_AdjResult == ADC_RES_H2L8) ADCCFG |=  (1<<5);  //10位AD结果的高2位放ADC_RES的低2位，低8位在AD
             -C_RESL。
  56   1        else                  ADCCFG &= ~(1<<5);  //10位AD结果的高8位放ADC_RES，低2位在ADC_RESL的低2位。
  57   1        if(ADCx->ADC_Interrupt == ENABLE) EADC = 1;     //中断允许    ENABLE,DISABLE
  58   1        else                EADC = 0;
  59   1        if(ADCx->ADC_Polity == PolityHigh)  PADC = 1;   //优先级设置  PolityHigh,PolityLow
  60   1        else                PADC = 0;
  61   1      }
  62          
  63          
  64          //========================================================================
  65          // 函数: void ADC_PowerControl(unsigned char pwr)
  66          // 描述: ADC电源控制程序.
  67          // 参数: pwr: 电源控制,ENABLE或DISABLE.
  68          //       
  69          //       
  70          // 返回: 
  71          // 版本: VER1.0.0
  72          // 日期: 2018-12-20
  73          // 作者: PineconePi
  74          // 备注:
  75          //  
  76          //  
  77          //  
  78          //  
  79          //  
  80          //========================================================================
  81          void  ADC_PowerControl(unsigned char pwr)
  82          {
  83   1        if(pwr == ENABLE) ADC_CONTR |= 0x80;
  84   1        else        ADC_CONTR &= 0x7f;
  85   1      }
  86          
  87          //========================================================================
  88          // 函数: unsigned int Get_ADC10bitResult(unsigned char channel)
  89          // 描述: 查询一次ADC结果.
  90          // 参数: channel: 选择要转换的ADC.
  91          //       
  92          //       
  93          // 返回: ADC结果.
  94          // 版本: VER1.0.0
  95          // 日期: 2018-12-20
  96          // 作者: PineconePi
  97          // 备注:
  98          //  
  99          //  
 100          //  
 101          //  
 102          //  
 103          //========================================================================
 104          unsigned int  Get_ADC10bitResult(unsigned char channel) //channel = 0~7
 105          {
 106   1        unsigned int  adc;
 107   1        unsigned char i;
 108   1      
 109   1        if(channel > ADC_CH7) return  1024; //错误,返回1024,调用的程序判断  
 110   1        ADC_RES = 0;
 111   1        ADC_RESL = 0;
C51 COMPILER V9.01   ADC                                                                   05/20/2019 10:29:16 PAGE 3   

 112   1      
 113   1        ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel; 
 114   1        _nop_();  
 115   1        _nop_();  //对ADC_CONTR操作后要2T之后才能访问
 116   1      
 117   1        for(i=0; i<250; i++)    //超时
 118   1        {
 119   2          if(ADC_CONTR & ADC_FLAG)
 120   2          {
 121   3            ADC_CONTR &= ~ADC_FLAG;
 122   3            if(ADCCFG &  (1<<5))    //10位AD结果的高2位放ADC_RES的低2位，低8位在ADC_RESL。
 123   3            {
 124   4              adc = (unsigned int)(ADC_RES & 3);
 125   4              adc = (adc << 8) | ADC_RESL;
 126   4            }
 127   3            else    //10位AD结果的高8位放ADC_RES，低2位在ADC_RESL的低2位。
 128   3            {
 129   4              adc = (unsigned int)ADC_RES;
 130   4              adc = (adc << 2) | (ADC_RESL & 3);
 131   4            }
 132   3            return  adc;
 133   3          }
 134   2        }
 135   1        return  1024; //错误,返回1024,调用的程序判断
 136   1      }
 137          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
