C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE WS2812B
OBJECT MODULE PLACED IN .\Objects\ws2812b.obj
COMPILER INVOKED BY: E:\KEIL14开发程序\C51\BIN\C51.EXE Library\device\WS2812B\ws2812b.c LARGE OPTIMIZE(8,SPEED) BROWSE I
                    -NCDIR(.\Library\device\digital tube;.\Library\device\HC_SR04;.\Library\device\MP3Player;.\Library\device\Servo;.\Library
                    -\device\WS2812B;.\Library\system\ADC;.\Library\system\delay;.\Library\system\EEPROM;.\Library\system\EXTI;.\Library\syst
                    -em\GPIO;.\Library\system\IIC;.\Library\system\PCA;.\Library\system\PWM;.\Library\system\SYSTEM(Important documents）;.\L
                    -ibrary\system\TIMER;.\Library\system\UART;.\Library\system\WatchDog) DEBUG OBJECTEXTEND PRINT(.\Listings\ws2812b.lst) TA
                    -BS(2) OBJECT(.\Objects\ws2812b.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    ws2812b.c
   4            * @author  PineconePi
   5            * @version V1.0.0
   6            * @date    20-December-2018
   7            * @brief  This article will be used for  driving  ws2812b.
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            * The frequency of crystal oscillator is 24 Mhz
  12            *
  13            *  
  14            * 
  15            * 
  16            * 
  17            * 
  18            *
  19            * 
  20            ******************************************************************************
  21            **/
  22          #include "ws2812b.h"
  23          #include "intrins.h"
  24           //一个 nop 41.6666667 ns (1T：1个机器周期=1个时钟周期）
  25          unsigned char data_red[n_ws2812b] = {0};//普通模式颜色缓存
  26          unsigned char data_green[n_ws2812b] = {0};
  27          unsigned char data_blue[n_ws2812b] = {0};
  28          
  29          unsigned char data_rollred[n_ws2812b+1] = {0};//roll模式颜色缓存
  30          unsigned char data_rollgreen[n_ws2812b+1] = {0};
  31          unsigned char data_rollblue[n_ws2812b+1] = {0};
  32          //========================================================================
  33          // 函数: void Delay50us()
  34          // 描述: 复位延迟。
  35          // 参数: none.
  36          // 返回: none.
  37          // 版本: VER1.0.0
  38          // 日期: 2018-12-20
  39          // 备注: 
  40          //========================================================================
  41          void Delay50us()    //复位延迟
  42          {
  43   1        unsigned char i, j;
  44   1      
  45   1        _nop_();
  46   1        i = 2;
  47   1        j = 140;
  48   1        do
  49   1        {
  50   2          while (--j);
C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 2   

  51   2        } while (--i);
  52   1      }
  53          //========================================================================
  54          // 函数: void delay_ms(unsigned int ms)
  55          // 描述: 延时函数。
  56          // 参数: ms,要延时的ms数, 这里只支持1~10000 (10s) ms
  57          // 返回: none.
  58          // 版本: VER1.0.0
  59          // 日期: 2018-12-20
  60          // 备注: delay_ms(1000);//延迟1s
  61          //========================================================================
  62          void delay_ms_2812b(unsigned int ms){
  63   1        unsigned int k;
  64   1        unsigned char i, j;
  65   1        for(k=0;k<ms;k++)
  66   1        {
  67   2        _nop_();
  68   2        i = 32;
  69   2        j = 40;
  70   2          do
  71   2          {
  72   3            while (--j);
  73   3          } while (--i);
  74   2        }
  75   1        }
  76          //========================================================================
  77          // 函数: void rgb_high()
  78          // 描述: 1码，高电平850ns 低电平400ns （误差正负150ns）
  79          // 参数: 
  80          // 返回: none.
  81          // 版本: VER1.0.0
  82          // 日期: 2018-12-20
  83          // 备注: 
  84          //========================================================================                             
  85          void rgb_high()
  86          {
  87   1         rgb_pin = 1;
  88   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();  
  89   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();   
  90   1           rgb_pin = 0;
  91   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();
  92   1      }
  93          //========================================================================
  94          // 函数: void rgb_down()
  95          // 描述: 0码，高电平400ns 低电平850ns （误差正负150ns）
  96          // 参数: 
  97          // 返回: none.
  98          // 版本: VER1.0.0
  99          // 日期: 2018-12-20
 100          // 备注: 
 101          //========================================================================
 102          void rgb_down()
 103          {
 104   1         rgb_pin = 1;
 105   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();    
 106   1      
 107   1         rgb_pin = 0;
 108   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();  
 109   1         _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_(); _nop_();  
 110   1      }
 111          //========================================================================
 112          // 函数: void rgb_reset()
C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 3   

 113          // 描述: 复位WS2812B，开始一次新的命令
 114          // 参数: 
 115          // 返回: none.
 116          // 版本: VER1.0.0
 117          // 日期: 2018-12-20
 118          // 备注: 
 119          //========================================================================
 120          void rgb_reset()
 121          {
 122   1       rgb_pin = 0;
 123   1       Delay50us();
 124   1      }
 125          //========================================================================
 126          // 函数: void ws2812b_display(unsigned char green,unsigned char red,unsigned char blue)
 127          // 描述: 单个ws2812b控制
 128          // 参数:  green：绿色 0-255，red：红色 0-255 ，blue：蓝色 0-255，
 129          // 返回: none.
 130          // 版本: VER1.0.0
 131          // 日期: 2018-12-20
 132          // 备注: 
 133          //========================================================================
 134          void ws2812b_display(unsigned char green,unsigned char red,unsigned char blue)
 135          
 136          {
 137   1          unsigned int n = 0;
 138   1          //发送green位
 139   1          for(n=0;n<8;n++)
 140   1          {
 141   2            green<<=n;
 142   2            if(green&0x80 == 0x80)
 143   2            {
 144   3              rgb_high();
 145   3            }
 146   2            else  
 147   2            {
 148   3              rgb_down();
 149   3            }
 150   2          }
 151   1      
 152   1          //发送red位
 153   1          for(n=0;n<8;n++)
 154   1          {
 155   2            red<<=n;
 156   2            if(red&0x80 == 0x80)
 157   2            {
 158   3              rgb_high();
 159   3            }
 160   2            else  
 161   2            {
 162   3              rgb_down();
 163   3            }   
 164   2          }
 165   1          //发送blue位
 166   1          for(n=0;n<8;n++)
 167   1          {
 168   2            blue<<=n;
 169   2            if(blue&0x80 == 0x80)
 170   2            {
 171   3              rgb_high();
 172   3            }
 173   2            else  
 174   2            {
C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 4   

 175   3              rgb_down();
 176   3            }
 177   2          }
 178   1      }
 179          //========================================================================
 180          // 函数: void n_ws2812b_display(unsigned char display_mode,unsigned char green,unsigned char red,unsigned 
             -char blue)
 181          // 描述: n个ws2812b控制(n取决于n_ws2812b)
 182          // 参数: display_mode:模式选择，详情见ws2812b.h中定义 green：绿色 0-255，red：红色 0-255 ，blue：蓝色 0-25
             -5，
 183          // 返回: none.
 184          // 版本: VER1.0.0
 185          // 日期: 2018-12-20
 186          // 备注: 
 187          //========================================================================
 188          void n_ws2812b_display(unsigned char display_mode,unsigned char green,unsigned char red,unsigned char blue
             -)
 189          {
 190   1         unsigned char j ;
 191   1         unsigned char i ;
 192   1         unsigned char roll_i = 0;   //顺向流水
 193   1         unsigned char rollback_i = 1;   //反向流水
 194   1      
 195   1      /********************* 普通模式控制相关 *************************/
 196   1          if( display_mode == normal)
 197   1          {
 198   2          delay_ms_2812b(1);
 199   2          for(i=0;i<n_ws2812b;i++)
 200   2          {
 201   3              data_green[i] = green;
 202   3              data_red[i] = red; 
 203   3              data_blue[i] = blue;
 204   3          }
 205   2          for(i=0;i<n_ws2812b;i++)
 206   2          {
 207   3          ws2812b_display(data_green[i],data_red[i],data_blue[i]);
 208   3          }
 209   2          }
 210   1      /********************* 正向流水模式控制相关 *************************/
 211   1          else if( display_mode == roll)
 212   1          {
 213   2          delay_ms_2812b(1);
 214   2          for(i=0;i<=n_ws2812b;i++)
 215   2            {
 216   3              data_rollgreen[i] = green;
 217   3              data_rollred[i] = red; 
 218   3              data_rollblue[i] = blue;
 219   3          }
 220   2      
 221   2          for(i=0;i<=n_ws2812b;i++)
 222   2          {
 223   3          ws2812b_display(data_rollgreen[i],data_rollred[i],data_rollblue[i]);
 224   3          delay_ms_2812b(roll_delay);
 225   3          rgb_reset();
 226   3          for(i=0;i<roll_i;i++)
 227   3          {
 228   4          ws2812b_display(0,0,0);
 229   4          }
 230   3          roll_i++;
 231   3          }
 232   2          }
 233   1      
C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 5   

 234   1      /********************* 反向流水模式控制相关 *************************/
 235   1          else if ( display_mode ==  roll_back_1)
 236   1          {
 237   2           delay_ms_2812b(1);
 238   2              for(i=0;i<=n_ws2812b;i++)
 239   2            {
 240   3              data_rollgreen[i] = green;
 241   3              data_rollred[i] = red; 
 242   3              data_rollblue[i] = blue;
 243   3          }
 244   2      
 245   2          for(j=0;j<n_ws2812b;j++)
 246   2          {
 247   3            for(i=(n_ws2812b-rollback_i);i>0;i--)
 248   3            {
 249   4            ws2812b_display(0,0,0);
 250   4            }
 251   3            ws2812b_display(data_rollgreen[i],data_rollred[i],data_rollblue[i]);
 252   3            delay_ms_2812b(roll_delay);
 253   3            rollback_i++;
 254   3            if(rollback_i>n_ws2812b){rollback_i=1;}
 255   3              }
 256   2         delay_ms_2812b(1);  
 257   2         n_ws2812b_display(normal,0x00,0x00,0x00);
 258   2      }
 259   1      /********************* 反向间隔流水模式控制相关 *************************/
 260   1          else if ( display_mode ==  roll_back_2)
 261   1          {
 262   2           delay_ms_2812b(1);
 263   2              for(i=0;i<=n_ws2812b;i++)
 264   2            {
 265   3              data_rollgreen[i] = green;
 266   3              data_rollred[i] = red; 
 267   3              data_rollblue[i] = blue;
 268   3          }
 269   2      
 270   2          for(j=n_ws2812b;j>0;j--)
 271   2          {
 272   3            for(i=(n_ws2812b-rollback_i);i>0;i--)
 273   3            {
 274   4            ws2812b_display(0,0,0);
 275   4            }
 276   3            ws2812b_display(data_rollgreen[i],data_rollred[i],data_rollblue[i]);
 277   3            delay_ms_2812b(roll_delay);
 278   3            rollback_i++;
 279   3            for(i=(n_ws2812b-rollback_i+1);i>0;i--)
 280   3            {
 281   4            ws2812b_display(0,0,0);
 282   4            }
 283   3            if(rollback_i>n_ws2812b){rollback_i=1;}
 284   3              }
 285   2         delay_ms_2812b(1);  
 286   2          for(i=0;i<clear_ws2812b;i++)
 287   2          {
 288   3          ws2812b_display(0,0,0);
 289   3          }
 290   2              }
 291   1      /********************* 呼吸灯模式控制相关 *************************/
 292   1          else if ( display_mode == breathe)
 293   1          {
 294   2          //未完待续
 295   2              }
C51 COMPILER V9.01   WS2812B                                                               05/20/2019 10:29:16 PAGE 6   

 296   1      }
 297          
 298          
 299          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1017    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     75       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
