C51 COMPILER V9.01   IIC                                                                   05/20/2019 10:29:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: E:\KEIL14开发程序\C51\BIN\C51.EXE Library\system\IIC\iic.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\
                    -Library\device\digital tube;.\Library\device\HC_SR04;.\Library\device\MP3Player;.\Library\device\Servo;.\Library\device\
                    -WS2812B;.\Library\system\ADC;.\Library\system\delay;.\Library\system\EEPROM;.\Library\system\EXTI;.\Library\system\GPIO;
                    -.\Library\system\IIC;.\Library\system\PCA;.\Library\system\PWM;.\Library\system\SYSTEM(Important documents）;.\Library\s
                    -ystem\TIMER;.\Library\system\UART;.\Library\system\WatchDog) DEBUG OBJECTEXTEND PRINT(.\Listings\iic.lst) TABS(2) OBJECT
                    -(.\Objects\iic.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    iic.c
   4            * @author  PineconePi
   5            * @version V1.0.0
   6            * @date    20-December-2018
   7            * @brief  This file is used to Configure hardware IIC 
   8            * @License:GNU General Public License v3.0         
   9            ******************************************************************************
  10            * @attention
  11            *To operate IIC-related registers in host mode, P_SW2 = 0x80 is required. 
  12            *After  settings are completed, you must P_SW2 = 0x00
  13            *
  14            *  
  15            * 
  16            * 
  17            * 
  18            * 
  19            *
  20            * 
  21            ******************************************************************************
  22            **/
  23            /********************* 示例程序在iic.c文件末尾************************/
  24            
  25          #include "iic.h"
  26          #include "intrins.h"
  27          /********************* IIC端口量************************/
  28          sbit    SDA         =   P1^4;
  29          sbit    SCL         =   P1^5;
  30          /********************* IIC从机模式相关变量************************/
  31          bit isda;                                       //设备地址标志
  32          bit isma;                                       //存储地址标志
  33          unsigned char addr;
  34          unsigned char pdata buffer[256];
  35          //========================================================================
  36          // 函数: void IIC_host_Slave_machine(unsigned char host_Slave_machine)
  37          // 描述: 设置IIC模式。
  38          // 参数: host_Slave_machine：主机模式或从机模式
  39          //       
  40          //       
  41          // 返回: 
  42          // 版本: VER1.0.0
  43          // 日期: 2018-12-20
  44          // 作者: PineconePi
  45          // 备注:
  46          //  
  47          //  
  48          //  
  49          //  
  50          //  
C51 COMPILER V9.01   IIC                                                                   05/20/2019 10:29:17 PAGE 2   

  51          //========================================================================
  52          void IIC_host_Slave_machine(unsigned char host_Slave_machine)
  53          {
  54   1        if(host_Slave_machine==host_machine)
  55   1        {
  56   2          I2CCFG = 0xe0;                              //使能I2C主机模式
  57   2          I2CMSST = 0x00;
  58   2        }
  59   1        else if(host_Slave_machine==Slave_machine)
  60   1        {
  61   2           P_SW2 = 0x80;        //操作硬件IIC寄存器必须置P_SW2为1
  62   2          I2CCFG = 0x81;                              //使能I2C从机模式
  63   2          I2CSLADR = IIC_Slave_machine_address;       //设置从机设备地址为5A
  64   2          I2CSLST = 0x00;
  65   2          I2CSLCR = 0x00;                             //禁止从机模式中断
  66   2        }
  67   1      }
  68          //========================================================================
  69          // 函数: void handle_Slave_machine()
  70          // 描述: IIC从机模式处理函数。
  71          // 参数:
  72          //       
  73          //       
  74          // 返回: 
  75          // 版本: VER1.0.0
  76          // 日期: 2018-12-20
  77          // 作者: PineconePi
  78          // 备注:
  79          //  
  80          //  
  81          //  
  82          //  
  83          //  
  84          //========================================================================
  85          void handle_Slave_machine()
  86          {
  87   1          isda = 1;                                   //用户变量初始化
  88   1          isma = 1;
  89   1          addr = 0;
  90   1          I2CTXD = buffer[addr];
  91   1             if (I2CSLST & 0x40)
  92   1              {
  93   2                  I2CSLST &= ~0x40;                   //处理START事件
  94   2              }
  95   1              else if (I2CSLST & 0x20)
  96   1              {
  97   2                  I2CSLST &= ~0x20;                   //处理RECV事件
  98   2                  if (isda)
  99   2                  {
 100   3                      isda = 0;                       //处理RECV事件（RECV DEVICE ADDR）
 101   3                  }
 102   2                  else if (isma)
 103   2                  {
 104   3                      isma = 0;                       //处理RECV事件（RECV MEMORY ADDR）
 105   3                      addr = I2CRXD;
 106   3                      I2CTXD = buffer[addr];
 107   3                  }
 108   2                  else
 109   2                  {
 110   3                      buffer[addr++] = I2CRXD;        //处理RECV事件（RECV DATA）
 111   3                  }
 112   2              }
C51 COMPILER V9.01   IIC                                                                   05/20/2019 10:29:17 PAGE 3   

 113   1              else if (I2CSLST & 0x10)
 114   1              {
 115   2                  I2CSLST &= ~0x10;                   //处理SEND事件
 116   2                  if (I2CSLST & 0x02)
 117   2                  {
 118   3                      I2CTXD = 0xff;
 119   3                  }
 120   2                  else
 121   2                  {
 122   3                      I2CTXD = buffer[++addr];
 123   3                  }
 124   2              }
 125   1              else if (I2CSLST & 0x08)
 126   1              {
 127   2                  I2CSLST &= ~0x08;                   //处理STOP事件
 128   2                  isda = 1;
 129   2                  isma = 1;
 130   2              }
 131   1        
 132   1      }
 133          //========================================================================
 134          // 函数:  IIC主机模式相关处理函数
 135          // 描述:  IIC主机模式相关处理函数。
 136          // 参数:
 137          //       
 138          //       
 139          // 返回: 
 140          // 版本: VER1.0.0
 141          // 日期: 2018-12-20
 142          // 作者: PineconePi
 143          // 备注:
 144          //  
 145          //  
 146          //  
 147          //  
 148          //  
 149          //========================================================================
 150          void Wait()
 151          {
 152   1          while (!(I2CMSST & 0x40));
 153   1          I2CMSST &= ~0x40;
 154   1      }
 155          
 156          void Start()
 157          {
 158   1          I2CMSCR = 0x01;                             //发送START命令
 159   1          Wait();
 160   1      }
 161          
 162          void SendData(char dat)
 163          {
 164   1          I2CTXD = dat;                               //写数据到数据缓冲区
 165   1          I2CMSCR = 0x02;                             //发送SEND命令
 166   1          Wait();
 167   1      }
 168          
 169          void RecvACK()
 170          {
 171   1          I2CMSCR = 0x03;                             //发送读ACK命令
 172   1          Wait();
 173   1      }
 174          
C51 COMPILER V9.01   IIC                                                                   05/20/2019 10:29:17 PAGE 4   

 175          char RecvData()
 176          {
 177   1          I2CMSCR = 0x04;                             //发送RECV命令
 178   1          Wait();
 179   1          return I2CRXD;
 180   1      }
 181          
 182          void SendACK()
 183          {
 184   1          I2CMSST = 0x00;                             //设置ACK信号
 185   1          I2CMSCR = 0x05;                             //发送ACK命令
 186   1          Wait();
 187   1      }
 188          
 189          void SendNAK()
 190          {
 191   1          I2CMSST = 0x01;                             //设置NAK信号
 192   1          I2CMSCR = 0x05;                             //发送ACK命令
 193   1          Wait();
 194   1      }
 195          
 196          void Stop()
 197          {
 198   1          I2CMSCR = 0x06;                             //发送STOP命令
 199   1          Wait();
 200   1      }
 201          
 202          void wait_device()
 203          {
 204   1          int i;
 205   1      
 206   1          for (i=0; i<3000; i++)
 207   1          {
 208   2              _nop_();
 209   2              _nop_();
 210   2              _nop_();
 211   2              _nop_();
 212   2          }
 213   1      }
 214          //========================================================================
 215          // 函数:  IIC主机模式相关处理函数示例
 216          // 描述:  IIC主机模式相关处理函数示例。
 217          // 参数:     
 218          // 返回: 
 219          // 版本: VER1.0.0
 220          // 日期: 2018-12-20
 221          // 作者: PineconePi
 222          // 示例：
 223          //    P_SW2 = 0x80;                                 
 224          //    IIC_host_Slave_machine（host_machine);       //设置为主机模式
 225          //    Start();                                    //发送起始命令
 226          //    SendData(0xa0);                             //发送设备地址+写命令
 227          //    RecvACK();
 228          //    SendData(0x00);                             //发送存储地址高字节
 229          //    RecvACK();
 230          //    SendData(0x00);                             //发送存储地址低字节
 231          //    RecvACK();
 232          //    SendData(0x12);                             //写测试数据1
 233          //    RecvACK();
 234          //    SendData(0x78);                             //写测试数据2
 235          //    RecvACK();
 236          //    Stop();                                     //发送停止命令
C51 COMPILER V9.01   IIC                                                                   05/20/2019 10:29:17 PAGE 5   

 237          //    Delay();                                    //等待设备写数据
 238          //    Start();                                    //发送起始命令
 239          //    SendData(0xa0);                             //发送设备地址+写命令
 240          //    RecvACK();
 241          //    SendData(0x00);                             //发送存储地址高字节
 242          //    RecvACK();
 243          //    SendData(0x00);                             //发送存储地址低字节
 244          //    RecvACK();
 245          //    Start();                                    //发送起始命令
 246          //    SendData(0xa1);                             //发送设备地址+读命令
 247          //    RecvACK();
 248          //    P0 = RecvData();                            //读取数据1
 249          //    SendACK();
 250          //    P2 = RecvData();                            //读取数据2
 251          //    SendNAK();
 252          //    Stop();                                     //发送停止命令
 253          //    P_SW2 = 0x00;
 254          //========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =    256    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
